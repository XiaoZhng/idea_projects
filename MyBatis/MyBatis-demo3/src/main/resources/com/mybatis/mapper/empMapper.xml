<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.empMapper">

    <!--
        resultMap：设置自定义映射关系
        id：唯一标识，不能重复
        type：设置映射关系中给实体类类型
        子标签：
        id：设置主键的映射关系
        result：设置普通字段的映射关系
        属性：
        property：设置映射关系中的属性名，必须是type属性所设置的实体类类型中的属性名
        column：设置映射关系中的字段名，必须是sql语句查询出的字段名
    -->
    <!--<resultMap id="resultEmp" type="emp">-->
    <!--    <id property="eid" column="eid"></id>-->
    <!--    <result property="empName" column="emp_name"></result>-->
    <!--    <result property="age" column="age"></result>-->
    <!--    <result property="sex" column="sex"></result>-->
    <!--    <result property="email" column="email"></result>-->
    <!--</resultMap>-->
    <!--List<emp> getAllEmp();-->
    <select id="getAllEmp" resultType="emp">
        select * from emp
    </select>

    <select id="getAllEmpOld" resultType="emp">
        <!--select eid, emp_name as empName, age, sex, email from emp-->
        select * from emp
    </select>

    <!--处理多对一映射关系方式一：级联属性赋值-->
    <resultMap id="EmpAndDeptResultMapOne" type="emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <result property="dept.did" column="did"></result>
        <result property="dept.deptName" column="dept_name"></result>
    </resultMap>

    <resultMap id="EmpAndDeptResultMapTwo" type="emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <!--
            association：处理多对一的映射关系
            property：需要处理多对一的映射关系的属性名
            javaType：该属性的类型
        -->
        <association property="dept" javaType="dept">
            <id property="did" column="did"></id>
            <result property="deptName" column="dept_name"></result>
        </association>
    </resultMap>
    <!--emp getEmpAndDept(@Param("eid") Integer eid);-->
    <select id="getEmpAndDept" resultMap="EmpAndDeptResultMapTwo">
        select * from emp left join dept on emp.did = dept.did where emp.eid = #{eid}
    </select>


    <!--emp getEmpAndDeptByStepOne(@Param("eid") Integer eid);-->
    <resultMap id="EmpAndDeptByStepResultMap" type="emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <!--
            select：设置分布查询的sql的唯一标识(namespace.SQLId或者 mapper接口的全类型.方法名)
            column：设置分布查询的条件
            fetchType：当开启了全局的延迟加载之后，可通过此属性手动控制延迟加载的效果
            fetchType="lazy|eager"：lazy表示延迟加载，eager表示立即加载
        -->
        <association property="dept"
                     select="com.mybatis.mapper.deptMapper.getEmpAndDeptByStepTwo"
                     column="did"
                     fetchType="eager"></association>
    </resultMap>
    <select id="getEmpAndDeptByStepOne" resultMap="EmpAndDeptByStepResultMap">
        select * from emp where eid = #{eid}
    </select>

    <!--List<emp> getDeptAndEmpByStepTwo(@Param("did") Integer did);-->
    <!--因为全局配置设置了setting，所以不可以不用resultMap-->
    <select id="getDeptAndEmpByStepTwo" resultType="emp">
        select * from emp where did = #{did}
    </select>

</mapper>
